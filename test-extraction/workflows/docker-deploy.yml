name: Build and Deploy to Docker Hub

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag (leave empty for latest)'
        required: false
        default: ''
      force_rebuild:
        description: 'Force rebuild without cache'
        type: boolean
        required: false
        default: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine tags
        id: tags
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            CUSTOM_TAG="${{ secrets.DOCKER_USERNAME }}/github-workflows:${{ github.event.inputs.tag }}"
            echo "tags=$CUSTOM_TAG,${{ secrets.DOCKER_USERNAME }}/github-workflows:latest" >> $GITHUB_OUTPUT
          else
            echo "tags=${{ secrets.DOCKER_USERNAME }}/github-workflows:latest" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: ${{ github.event.inputs.force_rebuild != 'true' && 'type=gha' || '' }}
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker run --rm ${{ secrets.DOCKER_USERNAME }}/github-workflows:latest health

      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_USERNAME }}/github-workflows
          readme-filepath: ./README-docker.md

      - name: Output deployment info
        run: |
          echo "âœ… Successfully deployed to Docker Hub!"
          echo "Image: ${{ steps.tags.outputs.tags }}"
          echo "Platforms: linux/amd64, linux/arm64"
          echo ""
          echo "To use the image:"
          echo "docker pull ${{ secrets.DOCKER_USERNAME }}/github-workflows:latest"
